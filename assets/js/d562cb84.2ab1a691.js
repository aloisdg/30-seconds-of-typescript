"use strict";(self.webpackChunk_deepakvishwakarma_ts_util=self.webpackChunk_deepakvishwakarma_ts_util||[]).push([[1791],{3905:function(t,e,r){r.d(e,{Zo:function(){return u},kt:function(){return d}});var n=r(67294);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function s(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?s(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function a(t,e){if(null==t)return{};var r,n,i=function(t,e){if(null==t)return{};var r,n,i={},s=Object.keys(t);for(n=0;n<s.length;n++)r=s[n],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(n=0;n<s.length;n++)r=s[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}var c=n.createContext({}),p=function(t){var e=n.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},u=function(t){var e=p(t.components);return n.createElement(c.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var r=t.components,i=t.mdxType,s=t.originalType,c=t.parentName,u=a(t,["components","mdxType","originalType","parentName"]),f=p(r),d=i,m=f["".concat(c,".").concat(d)]||f[d]||l[d]||s;return r?n.createElement(m,o(o({ref:e},u),{},{components:r})):n.createElement(m,o({ref:e},u))}));function d(t,e){var r=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var s=r.length,o=new Array(s);o[0]=f;var a={};for(var c in e)hasOwnProperty.call(e,c)&&(a[c]=e[c]);a.originalType=t,a.mdxType="string"==typeof t?t:i,o[1]=a;for(var p=2;p<s;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},86137:function(t,e,r){r.r(e),r.d(e,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return l}});var n=r(87462),i=r(63366),s=(r(67294),r(3905)),o=["components"],a={title:"createDirIfNotExists",tags:["node","beginner"],author_title:"Deepak Vishwakarma",author_url:"https://github.com/deepakshrma",author_image_url:"https://avatars2.githubusercontent.com/u/7682731?s=400",description:'Implementation of "createDirIfNotExists" in typescript, javascript and deno.',image:"https://www.positronx.io/wp-content/uploads/2018/11/positronx-banner-1152-1.jpg"},c=void 0,p={unversionedId:"createDirIfNotExists",id:"createDirIfNotExists",title:"createDirIfNotExists",description:'Implementation of "createDirIfNotExists" in typescript, javascript and deno.',source:"@site/docs/createDirIfNotExists.md",sourceDirName:".",slug:"/createDirIfNotExists",permalink:"/30-seconds-of-typescript/docs/createDirIfNotExists",editUrl:"https://github.com/deepakshrma/30-seconds-of-typescript/edit/master/docs/createDirIfNotExists.md",tags:[{label:"node",permalink:"/30-seconds-of-typescript/docs/tags/node"},{label:"beginner",permalink:"/30-seconds-of-typescript/docs/tags/beginner"}],version:"current",frontMatter:{title:"createDirIfNotExists",tags:["node","beginner"],author_title:"Deepak Vishwakarma",author_url:"https://github.com/deepakshrma",author_image_url:"https://avatars2.githubusercontent.com/u/7682731?s=400",description:'Implementation of "createDirIfNotExists" in typescript, javascript and deno.',image:"https://www.positronx.io/wp-content/uploads/2018/11/positronx-banner-1152-1.jpg"},sidebar:"someSidebar",previous:{title:"counter",permalink:"/30-seconds-of-typescript/docs/counter"},next:{title:"createDirIfNotExistsSync",permalink:"/30-seconds-of-typescript/docs/createDirIfNotExistsSync"}},u={},l=[],f={toc:l};function d(t){var e=t.components,r=(0,i.Z)(t,o);return(0,s.kt)("wrapper",(0,n.Z)({},f,r,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-typescript-blue.svg?style=flat-square",alt:"TS"}),"\n",(0,s.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-nodejs-green.svg?style=flat-square",alt:"NODE"})),(0,s.kt)("p",null,"Creates a directory, if it does not exist."),(0,s.kt)("p",null,"Use ",(0,s.kt)("inlineCode",{parentName:"p"},"fs.exists()")," to check if the directory exists, ",(0,s.kt)("inlineCode",{parentName:"p"},"fs.mkdir()")," to create it. Checkout ",(0,s.kt)("inlineCode",{parentName:"p"},"createDirIfNotExistsSync")," for synchronous API."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="typescript"',title:'"typescript"'},'const { mkdir, exists } = require("fs");\nconst { promisify } = require("util");\nconst mkdirP = promisify(mkdir);\nconst existsP = promisify(exists);\n\nconst createDirIfNotExists = async (dir: string) =>\n  !(await existsP(dir)) ? await mkdirP(dir) : undefined;\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="typescript"',title:'"typescript"'},"(async function () {\n  console.log(await createDirIfNotExists(\"test\")); // creates the directory 'test', if it doesn't exist\n})();\n")))}d.isMDXComponent=!0}}]);