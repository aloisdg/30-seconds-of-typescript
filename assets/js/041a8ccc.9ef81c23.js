"use strict";(self.webpackChunk_deepakvishwakarma_ts_util=self.webpackChunk_deepakvishwakarma_ts_util||[]).push([[6946],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},s=Object.keys(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),c=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=c(t.components);return r.createElement(p.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},y=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,s=t.originalType,p=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),y=c(n),m=a,d=y["".concat(p,".").concat(m)]||y[m]||l[m]||s;return n?r.createElement(d,i(i({ref:e},u),{},{components:n})):r.createElement(d,i({ref:e},u))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var s=n.length,i=new Array(s);i[0]=y;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},49446:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return l}});var r=n(87462),a=n(63366),s=(n(67294),n(3905)),i=["components"],o={title:"prettyBytes|prettyBytesT",tags:["string","math","advanced"],author_title:"Deepak Vishwakarma",author_url:"https://github.com/deepakshrma",author_image_url:"https://avatars2.githubusercontent.com/u/7682731?s=400",description:'Implementation of "prettyBytes|prettyBytesT" in typescript, javascript and deno.',image:"https://www.positronx.io/wp-content/uploads/2018/11/positronx-banner-1152-1.jpg"},p=void 0,c={unversionedId:"prettyBytes",id:"prettyBytes",title:"prettyBytes|prettyBytesT",description:'Implementation of "prettyBytes|prettyBytesT" in typescript, javascript and deno.',source:"@site/docs/prettyBytes.md",sourceDirName:".",slug:"/prettyBytes",permalink:"/30-seconds-of-typescript/docs/prettyBytes",editUrl:"https://github.com/deepakshrma/30-seconds-of-typescript/edit/master/docs/prettyBytes.md",tags:[{label:"string",permalink:"/30-seconds-of-typescript/docs/tags/string"},{label:"math",permalink:"/30-seconds-of-typescript/docs/tags/math"},{label:"advanced",permalink:"/30-seconds-of-typescript/docs/tags/advanced"}],version:"current",frontMatter:{title:"prettyBytes|prettyBytesT",tags:["string","math","advanced"],author_title:"Deepak Vishwakarma",author_url:"https://github.com/deepakshrma",author_image_url:"https://avatars2.githubusercontent.com/u/7682731?s=400",description:'Implementation of "prettyBytes|prettyBytesT" in typescript, javascript and deno.',image:"https://www.positronx.io/wp-content/uploads/2018/11/positronx-banner-1152-1.jpg"},sidebar:"someSidebar",previous:{title:"prefix",permalink:"/30-seconds-of-typescript/docs/prefix"},next:{title:"primes",permalink:"/30-seconds-of-typescript/docs/primes"}},u={},l=[],y={toc:l};function m(t){var e=t.components,n=(0,a.Z)(t,i);return(0,s.kt)("wrapper",(0,r.Z)({},y,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-typescript-blue.svg?style=flat-square",alt:"TS"}),"\n",(0,s.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-javascript-yellow.svg?style=flat-square",alt:"JS"}),"\n",(0,s.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-deno-green.svg?style=flat-square",alt:"Deno"})),(0,s.kt)("p",null,"Converts a number in bytes to a human-readable string."),(0,s.kt)("p",null,"Use an array dictionary of units to be accessed based on the exponent.\nUse ",(0,s.kt)("inlineCode",{parentName:"p"},"Number.toPrecision()")," to truncate the number to a certain number of digits.\nReturn the prettified string by building it up, taking into account the supplied options and whether it is negative or not.\nOmit the second argument, ",(0,s.kt)("inlineCode",{parentName:"p"},"precision"),", to use a default precision of ",(0,s.kt)("inlineCode",{parentName:"p"},"3")," digits.\nOmit the third argument, ",(0,s.kt)("inlineCode",{parentName:"p"},"addSpace"),", to add space between the number and unit by default."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="typescript"',title:'"typescript"'},'const prettyBytes = (num: number, precision = 3, addSpace = " ") => {\n  const UNITS = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];\n  if (Math.abs(num) < 1) return num + addSpace + UNITS[0];\n  const exponent = Math.min(\n    Math.floor(Math.log10(num < 0 ? -num : num) / 3),\n    UNITS.length - 1\n  );\n  const n = Number(\n    ((num < 0 ? -num : num) / 1000 ** exponent).toPrecision(precision)\n  );\n  return (num < 0 ? "-" : "") + n + addSpace + UNITS[exponent];\n};\n\nconst prettyBytesT = (\n  strings: TemplateStringsArray,\n  bytes: number,\n  precision: number = 3\n) => {\n  return prettyBytes(bytes, precision, strings.join(""));\n};\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="typescript"',title:'"typescript"'},'prettyBytes(1000); // "1 KB"\nprettyBytes(-27145424323.5821, 5); // "-27.145 GB"\nprettyBytes(123456789, 3, ""); // "123MB"\nprettyBytes(123456789, 3, "_"), "123_MB")\n\n//No sapce\nprettyBytesT`${-27145424323.5821}${5}`; //"-27.145GB"\n\n//With sapce\nprettyBytesT`${123456789} ${3}`; //"123 MB"\n\n//With _\nprettyBytesT`${123456789}_${3}`; //"123_MB"\n')))}m.isMDXComponent=!0}}]);